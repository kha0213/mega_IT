-- V. 그룹함수 SUM, AVG, MIN, MAX, COUNT, STDDEV, VARIANCE
SELECT SUM(SAL) FROM EMP;
SELECT DEPTNO, SUM(SAL) FROM EMP GROUP BY DEPTNO; --DEPTNO 별로 SAL을 SUM한 결과
SELECT DEPTNO, SUM(SAL) FROM EMP
    WHERE ENAME!='SMITH'
    GROUP BY DEPTNO
    HAVING SUM(SAL)>=9000 -- HAVIG절이 WHERE 절과 비슷
    ORDER BY DEPTNO;
-- EMP 테이블의 평균 SAL
SELECT ROUND(AVG(SAL), 2) FROM EMP;
SELECT COUNT(*) FROM EMP; -- EMP테이블의 행수
SELECT SUM(SAL)/COUNT(*), AVG(SAL) FROM EMP; --COUNT 안의 *은 모든 행수
SELECT SUM(COMM) FROM EMP; -- 그룹함수 일 경우 NULL값은 자동제외
SELECT SUM(COMM)/COUNT(COMM), AVG(COMM) FROM EMP;
SELECT COUNT(COMM) FROM EMP;
SELECT VARIANCE(SAL) 분산, STDDEV(SAL)*STDDEV(SAL) "표준편차*표준편차" FROM EMP;  
SELECT DEPTNO, AVG(SAL), STDDEV(SAL) FROM EMP
    GROUP BY DEPTNO
    ORDER BY AVG(SAL);
SELECT MAX(SAL) FROM EMP;
SELECT DEPTNO, MAX(SAL) FROM EMP GROUP BY DEPTNO; --10번부서에 5000받는사람 이름을 뿌리려면 나중에 배운당
--업무의 개수는
SELECT COUNT(DISTINCT(JOB)) FROM EMP; -- 중복제거 해야한다.
--탄탄다지기
--가장 최근에 입사한 직원의 입사일과 가장 최초에 입사한 직원의 입사일 출력
SELECT MIN(HIREDATE) 최초입사일,MAX(HIREDATE) 최근입사일 FROM EMP;
--최근에 입사한 직원의 입사일,근무일, 입사한지 가장 오래된 직원의 입사일, 근무일
SELECT MIN(HIREDATE) "최초입사일", TRUNC(SYSDATE-MIN(HIREDATE)), MAX(HIREDATE) 최근입사일, TRUNC(SYSDATE-MAX(HIREDATE)) FROM EMP;
--	10번 부서 소속의 사원의 평균 급여
SELECT AVG(SAL) FROM EMP
    WHERE DEPTNO=10;
--	10번 부서 소속의 사원 중에서 상여금을 받는 사원의 수를 구해 보시오
SELECT COUNT(COMM) FROM EMP
    WHERE DEPTNO=10;
--AVG(SAL)이 2000이상 (그룹함수에 대한 조건은 WHERE 절이 아니고 HAVING 절에 )
SELECT DEPTNO, AVG(SAL) FROM EMP
    GROUP BY DEPTNO
    HAVING AVG(SAL)>=2000;
-- 부서명 별 평균 급여 급여 최소값, 급여 최댓값 출력
SELECT DEPTNO, AVG(SAL), MIN(SAL), MAX(SAL) FROM EMP
    GROUP BY DEPTNO;
   
-- 부서명 별 평균 급여 출력 (부서명 ABCD순으로 출력)
SELECT DNAME, AVG(SAL) FROM EMP E,DEPT D
    WHERE E.DEPTNO=D.DEPTNO
    GROUP BY DNAME
    ORDER BY DNAME;
-- 부서명 별 사원 수, 상여금을 받는 사원 수
SELECT DNAME 부서, COUNT(*), COUNT(COMM) FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO
    GROUP BY DNAME --GROUP BY 부서 는 에러!!!!!
    ORDER BY 부서;
-- GROUP BY 필드1
SELECT DEPTNO, AVG(SAL) 
    FROM EMP
    GROUP BY DEPTNO;
-- GROUP BY 필드1, 필드2
SELECT DEPTNO, JOB, AVG(SAL) 
    FROM EMP 
    GROUP BY DEPTNO,JOB
    ORDER BY DEPTNO; --눈에 잘 안들어옴
-- GROUP BY 절에 필드가 2개 일 때 가독성을 높이기 위해 DECODE 함수
-- [1단계] DECODE이용
SELECT ENAME, DEPTNO, DECODE(JOB, 'CLERK', SAL, 0) CLERK,
                      DECODE(JOB, 'MANAGER', SAL, 0) MANAGER,
                      DECODE(JOB, 'PRESIDENT', SAL, 0) PRESIDENT,
                      DECODE(JOB, 'ANALYST', SAL, 0) ANALYST,
                      DECODE(JOB, 'SALESMAN', SAL, 0) SALESMAN
      FROM EMP;  
-- [2단계] DECODE+GROUP BY 이용
SELECT DEPTNO, SUM(DECODE(JOB, 'CLERK', SAL, 0)) CLERK,
               SUM(DECODE(JOB, 'MANAGER', SAL, 0)) MANAGER,
               SUM(DECODE(JOB, 'PRESIDENT', SAL, 0)) PRESIDENT,
               SUM(DECODE(JOB, 'ANALYST', SAL, 0)) ANALYST,
               SUM(DECODE(JOB, 'SALESMAN', SAL, 0)) SALESMAN
      FROM EMP
      GROUP BY DEPTNO; 
SELECT DEPTNO, JOB, SUM(SAL) FROM EMP GROUP BY DEPTNO, JOB;
--ROLLUP 함수
SELECT DEPTNO, SUM(SAL) FROM EMP GROUP BY ROLLUP(DEPTNO);
SELECT DEPTNO, AVG(SAL) FROM EMP GROUP BY ROLLUP(DEPTNO);
-- [3단계] DECODE+GROUP BY+ROLLUP 이용
SELECT DEPTNO, SUM(DECODE(JOB, 'CLERK', SAL, 0)) CLERK,
               SUM(DECODE(JOB, 'MANAGER', SAL, 0)) MANAGER,
               SUM(DECODE(JOB, 'PRESIDENT', SAL, 0)) PRESIDENT,
               SUM(DECODE(JOB, 'ANALYST', SAL, 0)) ANALYST,
               SUM(DECODE(JOB, 'SALESMAN', SAL, 0)) SALESMAN,
               SUM(SAL) "부서별 급여 합"
      FROM EMP
      GROUP BY ROLLUP(DEPTNO); 
-- 방금 좌측(DEPTNO) 우측(JOB) SUM(SAL) 소계 포함
-- 좌측(JOB) 우측(DEPTNO) AVG(SAL) 평균 포함
SELECT SAL, JOB, DEPTNO FROM EMP ORDER BY JOB;
SELECT * FROM DEPT;
SELECT JOB, ROUND(AVG(DECODE(DEPTNO, 10, SAL))) "ACCOUNTING(10번 부서)",
            ROUND(AVG(DECODE(DEPTNO, 20, SAL))) "RESEARCH(20번 부서)",
            ROUND(AVG(DECODE(DEPTNO, 30, SAL))) "SALES(30번 부서)",
            ROUND(AVG(SAL)) "평균 총 합"
    FROM EMP
    GROUP BY ROLLUP(JOB);

-- 부서번호별 평균급여출력(평균 급여가 2000이상인 그룹만 출력)
SELECT DEPTNO, AVG(SAL)
    FROM EMP
    GROUP BY DEPTNO
    HAVING AVG(SAL)>=2000;
-- 부서번호별 최대급여 출력
SELECT DEPTNO, MAX(SAL)
    FROM EMP
    GROUP BY DEPTNO;
-- 부서번호별 부서번호, 최대급여, 최대급여 받는 사원이름 => SUB_QUERY


    


